version: '3.8'

services:
  agrilens-ai:
    build: .
    container_name: agrilens-ai
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - HF_HOME=/app/cache/huggingface
      - TRANSFORMERS_CACHE=/app/cache/transformers
      - TORCH_HOME=/app/cache/torch
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./exports:/app/exports
      - ./cache:/app/cache
      - ./.env:/app/.env:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 16G
        reservations:
          memory: 8G
    networks:
      - agrilens-network

  # Optional: Redis for caching (if needed in future)
  # redis:
  #   image: redis:7-alpine
  #   container_name: agrilens-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - agrilens-network

  # Optional: Nginx reverse proxy (for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: agrilens-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - agrilens-ai
  #   restart: unless-stopped
  #   networks:
  #     - agrilens-network

networks:
  agrilens-network:
    driver: bridge

volumes:
  # redis_data:
  #   driver: local 